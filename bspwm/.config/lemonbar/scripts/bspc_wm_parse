#!/usr/bin/env python3

import sys

if len(sys.argv) != 3:
    print("Usage: %s %s %s" % (sys.argv[0], "$(bspc wm -g)", "colors_path"))
    exit(0)

################################################################################
# initialization
################################################################################

bspc_state = sys.argv[1].split(":")

with open(sys.argv[2]) as file:
    colors = file.readlines()

color_dict = dict()
for line in colors:
    try:
        key, value = line.split("=")
        value = value.strip().strip("'")
        
        color_dict[key] = value
    except:
        continue

################################################################################
# helper function
################################################################################

def create_segment(name, color_fg, color_bg):
    return "%{{F{0}}}%{{B{1}}} {2} %{{B-}}%{{F-}}".format(color_dict[color_fg], color_dict[color_bg], name)

wm_info = str()
for line in bspc_state[:-1]:
    # desktop name
    name = line[1:]
    if line[0] == 'M':
        # activ monitor
        wm_info += create_segment(name, "cyan2", "background")
    if line[0] == 'm':
        # activ monitor
        wm_info += create_segment(name, "white2", "black2")
    elif line[0] == 'O':
        # focus occupied desktop
        wm_info += create_segment(name, "foreground", "blue1")
    elif line[0] == 'F':
        # focused free desktop
        wm_info += create_segment(name, "background", "blue1")
    elif line[0] == 'U':
        # focused urgent desktop
        wm_info += create_segment(name, "urgent", "blue1")
    elif line[0] == 'o':
        # occupied desktop
        wm_info += create_segment(name, "foreground", "background")
    elif line[0] == 'f':
        # free desktop
        wm_info += create_segment(name, "blue1", "background")
    elif line[0] == 'u':
        # urgent desktop
        wm_info += create_segment(name, "foreground", "urgent")

print(wm_info)
